{
    "docs": [
        {
            "location": "/",
            "text": "Angular B\u00e1sico\n\u00b6\n\n\n\n\nAcessar Slides\n\u00b6\n\n\nFrontend - Angular\n\u00b6\n\n\n\n\nAngular: o que \u00e9\n\n\nArquiteturas Web Modernas\n\n\nnvm/node.js/npm/Angular CLI\n\n\nM\u00f3dulos\n\n\nComponentes\n\n\nTemplates\n\n\nMetadata\n\n\nData Binding\n\n\nDiretivas\n\n\nPipes\n\n\nServi\u00e7os\n\n\nRotas\n\n\nGuardas\n\n\nRxJs\n\n\n\n\nBackend - Spring Boot\n\u00b6\n\n\n\n\nProtocolo HTTP\n\n\nDesign de API REST\n\n\nO que \u00e9\n\n\nImplementa\u00e7\u00e3o API REST\n\n\nPersistencia\n\n\nTratamento de Exce\u00e7\u00f5es\n\n\nSeguran\u00e7a\n\n\nJWT\n\n\n\n\nExerc\u00edcios:\n\u00b6\n\n\n\n\n01 - Instala\u00e7\u00e3o\n\n\n02 - Primeira Aplica\u00e7\u00e3o Angular",
            "title": "Home"
        },
        {
            "location": "/#angular-basico",
            "text": "",
            "title": "Angular B\u00e1sico"
        },
        {
            "location": "/#acessar-slides",
            "text": "",
            "title": "Acessar Slides"
        },
        {
            "location": "/#frontend-angular",
            "text": "Angular: o que \u00e9  Arquiteturas Web Modernas  nvm/node.js/npm/Angular CLI  M\u00f3dulos  Componentes  Templates  Metadata  Data Binding  Diretivas  Pipes  Servi\u00e7os  Rotas  Guardas  RxJs",
            "title": "Frontend - Angular"
        },
        {
            "location": "/#backend-spring-boot",
            "text": "Protocolo HTTP  Design de API REST  O que \u00e9  Implementa\u00e7\u00e3o API REST  Persistencia  Tratamento de Exce\u00e7\u00f5es  Seguran\u00e7a  JWT",
            "title": "Backend - Spring Boot"
        },
        {
            "location": "/#exercicios",
            "text": "01 - Instala\u00e7\u00e3o  02 - Primeira Aplica\u00e7\u00e3o Angular",
            "title": "Exerc\u00edcios:"
        },
        {
            "location": "/exercicios/exercicio-01/",
            "text": "Exerc\u00edcio 01\n\u00b6\n\n\nObjetivo\n\u00b6\n\n\nLinux\n\u00b6\n\n\n\n\nInstalar NVM, Node.js e NPM\n\n\n\n\n\n\n\n\nATEN\u00c7\u00c3O! Antes de come\u00e7ar:\n\n\nVerifique se j\u00e1 existe um \nnode\n instalado no seu ambiente com o comando: \nwhich node\n. Se j\u00e1 existir um node e o caminho for algo como \n/bin/bash\n, voc\u00ea precisar\u00e1 \nDESINSTALAR\n o node atual. Para remover o node do ubuntu, fa\u00e7a: \nsudo apt-get purge --auto-remove nodejs npm\n.\n\n\n\n\n\n\nNVM\n\u00b6\n\n\nPara instalar (ou atualizar) o NVM, voc\u00ea deve executar o script de instala\u00e7\u00e3o, usando cURL:\n\n\n1\ncurl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.11/install.sh \n|\n bash\n\n\n\n\n\n\nOu com wget:\n\n\n1\nwget -qO- https://raw.githubusercontent.com/creationix/nvm/v0.33.11/install.sh \n|\n bash\n\n\n\n\n\n\nDepois de rodar o script de instala\u00e7\u00e3o, execute o comando abaixo para verificar a instala\u00e7\u00e3o:\n\n\n1\nnvm --version\n\n\n\n\nO resultado esperado \u00e9 (na \u00e9poca em que isso foi escrito):\n\n1\n0.33.11\n\n\n\n\n\nSe voc\u00ea n\u00e3o tiver nenhuma resposta, ou se aparecer o erro:\n\n\n1\nnvm: \ncommand\n not found\n\n\n\n\n\n\nFeche e abra novamente seu terminal e tente verificar novamente.\n\n\nNode.js e NPM\n\u00b6\n\n\nPara instalar o Node.js \nLTS\n (\nLong Term Support\n), execute o comando:\n\n\n1\nnvm install --lts\n\n\n\n\n\n\nEsse comando ir\u00e1 instalar a \u00faltima vers\u00e3o LTS do Node.js e tamb\u00e9m vai instalar o NPM.\n\n\nPara confirmar a instala\u00e7\u00e3o do Node.js, execute:\n\n\n1\nnode --version\n\n\n\n\n\n\nO resultado esperado \u00e9 (na \u00e9poca em que isso foi escrito):\n\n\n1\nv8.11.3\n\n\n\n\n\n\n\n\nDICA: nvm\n\n\nSe voc\u00ea j\u00e1 tem uma vers\u00e3o de node instalada (ex. v6.x.y) e quer atualizar para a v8,\nexecute: \nnvm install 8 --reinstall-packages-from=6\n. Assim, todos os pacotes \nglobais\n ser\u00e3o reinstalados tamb\u00e9m na nova vers\u00e3o.\n\n\n\n\nPara confirmar a instala\u00e7\u00e3o do NPM, execute:\n\n\n1\nnpm --version\n\n\n\n\nO resultado esperado \u00e9 (na \u00e9poca em que isso foi escrito):\n\n1\n5.6.0\n\n\n\n\n\nWindows\n\u00b6\n\n\nNode\n\u00b6\n\n\nBaixe o arquivo \nde Instala\u00e7\u00e3o\n execute e siga as etapas.\n\n\nVisual Studio Code\n\u00b6\n\n\nPara instalar o VS Code, baixe a vers\u00e3o apropriada (.deb ou .rpm) de acordo com a sua distribui\u00e7\u00e3o Linux no endere\u00e7o: \nhttps://code.visualstudio.com/\n\n\nExtens\u00f5es\n\u00b6\n\n\nOpcionalmente, instale as seguintes extens\u00f5es:\n\n\n\n\nVS Code Quick Open \nCtrl\n \nP\n, cole os comandos e pressione \nENTER\n\n\n\n\n\n\n\n\n\n\nComando\n\n\nExtens\u00e3o\n\n\n\n\n\n\n\n\n\n\next install angular.ng-template\n\n\nAngular Language Service\n\n\n\n\n\n\next install coenraads.bracket-pair-colorizer-2\n\n\nBracket Pair Colorizer 2\n\n\n\n\n\n\next install msjsdiag.debugger-for-chrome\n\n\nDebugger for Chrome\n\n\n\n\n\n\next install formulahendry.auto-rename-tag\n\n\nAuto Rename Tag\n\n\n\n\n\n\next install esbenp.prettier-vscode\n\n\nPrettier - Code formatter\n\n\n\n\n\n\next install aeschli.vscode-css-formatter\n\n\nCSS Formatter\n\n\n\n\n\n\next install eamodio.gitlens\n\n\nGitLens \u2014 Git supercharged\n\n\n\n\n\n\next install databyne.theme-monokai-hc\n\n\nMonokai - High Contrast\n\n\n\n\n\n\n\n\nVS Code - Truques\n\u00b6\n\n\nEmmet\n\u00b6\n\n\n 1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\ndiv.div${div$}*4\ndiv.div${div$}*4\n\ndiv.row>div.col-md-3*4\ndiv.row>div.col-md-3*4\n\nlorem5*4\nlorem5*4\n\ndiv.container>lorem10*3\ndiv.container>lorem10*3\n\ndiv.item{$}*5\ndiv.item{$}*5\n\n\n\n\n- Wrap with abreviation\n\n\nvscode\n\u00b6\n\n\n\n\ncopiar em bloco (demonstrar)\n\n\n\n\n1\n2\n3\n4\n5\num\ndois\ntres\nquatro\ncinco\n\n\n\n\n\n\n\n\ntrocar ocorrencias \nctrl\n \nd\n e \nshitf\n \nL\n\n\n\n\nRefer\u00eancias\n\u00b6\n\n\n\n\nMarketplace \nhttps://marketplace.visualstudio.com/\n\n\nNVM (\nNode Version Manager\n): \nhttps://github.com/creationix/nvm\n\n\nNode Release Schedule: \nhttps://github.com/nodejs/Release#lts_schedule",
            "title": "01 - Instala\u00e7\u00e3o"
        },
        {
            "location": "/exercicios/exercicio-01/#exercicio-01",
            "text": "",
            "title": "Exerc\u00edcio 01"
        },
        {
            "location": "/exercicios/exercicio-01/#objetivo",
            "text": "",
            "title": "Objetivo"
        },
        {
            "location": "/exercicios/exercicio-01/#linux",
            "text": "Instalar NVM, Node.js e NPM     ATEN\u00c7\u00c3O! Antes de come\u00e7ar:  Verifique se j\u00e1 existe um  node  instalado no seu ambiente com o comando:  which node . Se j\u00e1 existir um node e o caminho for algo como  /bin/bash , voc\u00ea precisar\u00e1  DESINSTALAR  o node atual. Para remover o node do ubuntu, fa\u00e7a:  sudo apt-get purge --auto-remove nodejs npm .",
            "title": "Linux"
        },
        {
            "location": "/exercicios/exercicio-01/#nvm",
            "text": "Para instalar (ou atualizar) o NVM, voc\u00ea deve executar o script de instala\u00e7\u00e3o, usando cURL:  1 curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.11/install.sh  |  bash   Ou com wget:  1 wget -qO- https://raw.githubusercontent.com/creationix/nvm/v0.33.11/install.sh  |  bash   Depois de rodar o script de instala\u00e7\u00e3o, execute o comando abaixo para verificar a instala\u00e7\u00e3o:  1 nvm --version  \nO resultado esperado \u00e9 (na \u00e9poca em que isso foi escrito): 1 0.33.11   Se voc\u00ea n\u00e3o tiver nenhuma resposta, ou se aparecer o erro:  1 nvm:  command  not found   Feche e abra novamente seu terminal e tente verificar novamente.",
            "title": "NVM"
        },
        {
            "location": "/exercicios/exercicio-01/#nodejs-e-npm",
            "text": "Para instalar o Node.js  LTS  ( Long Term Support ), execute o comando:  1 nvm install --lts   Esse comando ir\u00e1 instalar a \u00faltima vers\u00e3o LTS do Node.js e tamb\u00e9m vai instalar o NPM.  Para confirmar a instala\u00e7\u00e3o do Node.js, execute:  1 node --version   O resultado esperado \u00e9 (na \u00e9poca em que isso foi escrito):  1 v8.11.3    DICA: nvm  Se voc\u00ea j\u00e1 tem uma vers\u00e3o de node instalada (ex. v6.x.y) e quer atualizar para a v8, execute:  nvm install 8 --reinstall-packages-from=6 . Assim, todos os pacotes  globais  ser\u00e3o reinstalados tamb\u00e9m na nova vers\u00e3o.   Para confirmar a instala\u00e7\u00e3o do NPM, execute:  1 npm --version  \nO resultado esperado \u00e9 (na \u00e9poca em que isso foi escrito): 1 5.6.0",
            "title": "Node.js e NPM"
        },
        {
            "location": "/exercicios/exercicio-01/#windows",
            "text": "",
            "title": "Windows"
        },
        {
            "location": "/exercicios/exercicio-01/#node",
            "text": "Baixe o arquivo  de Instala\u00e7\u00e3o  execute e siga as etapas.",
            "title": "Node"
        },
        {
            "location": "/exercicios/exercicio-01/#visual-studio-code",
            "text": "Para instalar o VS Code, baixe a vers\u00e3o apropriada (.deb ou .rpm) de acordo com a sua distribui\u00e7\u00e3o Linux no endere\u00e7o:  https://code.visualstudio.com/",
            "title": "Visual Studio Code"
        },
        {
            "location": "/exercicios/exercicio-01/#extensoes",
            "text": "Opcionalmente, instale as seguintes extens\u00f5es:   VS Code Quick Open  Ctrl   P , cole os comandos e pressione  ENTER      Comando  Extens\u00e3o      ext install angular.ng-template  Angular Language Service    ext install coenraads.bracket-pair-colorizer-2  Bracket Pair Colorizer 2    ext install msjsdiag.debugger-for-chrome  Debugger for Chrome    ext install formulahendry.auto-rename-tag  Auto Rename Tag    ext install esbenp.prettier-vscode  Prettier - Code formatter    ext install aeschli.vscode-css-formatter  CSS Formatter    ext install eamodio.gitlens  GitLens \u2014 Git supercharged    ext install databyne.theme-monokai-hc  Monokai - High Contrast",
            "title": "Extens\u00f5es"
        },
        {
            "location": "/exercicios/exercicio-01/#vs-code-truques",
            "text": "",
            "title": "VS Code - Truques"
        },
        {
            "location": "/exercicios/exercicio-01/#emmet",
            "text": "1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14 div.div${div$}*4\ndiv.div${div$}*4\n\ndiv.row>div.col-md-3*4\ndiv.row>div.col-md-3*4\n\nlorem5*4\nlorem5*4\n\ndiv.container>lorem10*3\ndiv.container>lorem10*3\n\ndiv.item{$}*5\ndiv.item{$}*5  \n- Wrap with abreviation",
            "title": "Emmet"
        },
        {
            "location": "/exercicios/exercicio-01/#vscode",
            "text": "copiar em bloco (demonstrar)   1\n2\n3\n4\n5 um\ndois\ntres\nquatro\ncinco    trocar ocorrencias  ctrl   d  e  shitf   L",
            "title": "vscode"
        },
        {
            "location": "/exercicios/exercicio-01/#referencias",
            "text": "Marketplace  https://marketplace.visualstudio.com/  NVM ( Node Version Manager ):  https://github.com/creationix/nvm  Node Release Schedule:  https://github.com/nodejs/Release#lts_schedule",
            "title": "Refer\u00eancias"
        },
        {
            "location": "/exercicios/exercicio-02/",
            "text": "Exerc\u00edcio 02\n\u00b6\n\n\nObjetivos\n\u00b6\n\n\n\n\nInstalar o Angular CLI\n\n\nCriar a primeira aplica\u00e7\u00e3o Angular\n\n\nExecutar a aplica\u00e7\u00e3o\n\n\n\n\nInstalando o Angular CLI\n\u00b6\n\n\nPara instalar o Angular CLI, execute:\n\n\n1\nnpm install -g @angular/cli\n\n\n\n\n\n\nPara verificar a instala\u00e7\u00e3o, execute:\n\n\n1\nng version\n\n\n\n\n\n\nO resultado esperado \u00e9:\n\n\n 1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n     _                      _                 ____ _     ___\n    / \n\\ \n  _ __   __ _ _   _\n|\n \n|\n __ _ _ __     / ___\n|\n \n|\n   \n|\n_ _\n|\n\n   / \u25b3 \n\\ \n|\n \n'_ \\ / _` | | | | |/ _` | '\n__\n|\n   \n|\n \n|\n   \n|\n \n|\n    \n|\n \n|\n\n  / ___ \n\\|\n \n|\n \n|\n \n|\n \n(\n_\n|\n \n|\n \n|\n_\n|\n \n|\n \n|\n \n(\n_\n|\n \n|\n \n|\n      \n|\n \n|\n___\n|\n \n|\n___ \n|\n \n|\n\n /_/   \n\\_\\_\n|\n \n|\n_\n|\n\\_\n_, \n|\n\\_\n_,_\n|\n_\n|\n\\_\n_,_\n|\n_\n|\n       \n\\_\n___\n|\n_____\n|\n___\n|\n\n                \n|\n___/\n\n\nAngular CLI: \n6\n.0.8\nNode: \n8\n.11.3\nOS: linux x64\nAngular:\n...\n\nPackage                      Version\n-\n@angular-devkit/architect    \n0\n.6.8\n@angular-devkit/core         \n0\n.6.8\n@angular-devkit/schematics   \n0\n.6.8\n@schematics/angular          \n0\n.6.8\n@schematics/update           \n0\n.6.8\nrxjs                         \n6\n.2.1\ntypescript                   \n2\n.7.2\n\n\n\n\n\n\nPara mais informa\u00e7\u00f5es sobre todos os comandos dispon\u00edveis do Angular CLI, execute:\n\n\n1\nng \nhelp\n\n\n\n\n\n\n\nSe voc\u00ea quiser saber mais sobre um comando espec\u00edfico, execute \nng [command name] --help\n. Por exemplo:\n\n\n1\nng generate --help\n\n\n\n\n\n\nCriando a primeira aplica\u00e7\u00e3o Angular\n\u00b6\n\n\nPara criar a primeira aplica\u00e7\u00e3o Angular, execute:\n\n\n1\nng new app-exemplo\n\n\n\n\n\n\nEsse comando ir\u00e1 criar a aplica\u00e7\u00e3o \"app-exemplo\" numa pasta com mesmo nome, e instalar as depend\u00eancias necess\u00e1rias.\n\n\nO resultado esperado \u00e9 algo como:\n\n\n 1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\nCREATE app-exemplo/README.md \n(\n1027\n bytes\n)\n\nCREATE app-exemplo/angular.json \n(\n3593\n bytes\n)\n\nCREATE app-exemplo/package.json \n(\n1315\n bytes\n)\n\nCREATE app-exemplo/tsconfig.json \n(\n384\n bytes\n)\n\nCREATE app-exemplo/tslint.json \n(\n2805\n bytes\n)\n\nCREATE app-exemplo/.editorconfig \n(\n245\n bytes\n)\n\nCREATE app-exemplo/.gitignore \n(\n503\n bytes\n)\n\nCREATE app-exemplo/src/environments/environment.prod.ts \n(\n51\n bytes\n)\n\nCREATE app-exemplo/src/environments/environment.ts \n(\n631\n bytes\n)\n\nCREATE app-exemplo/src/favicon.ico \n(\n5430\n bytes\n)\n\nCREATE app-exemplo/src/index.html \n(\n297\n bytes\n)\n\nCREATE app-exemplo/src/main.ts \n(\n370\n bytes\n)\n\nCREATE app-exemplo/src/polyfills.ts \n(\n3194\n bytes\n)\n\nCREATE app-exemplo/src/test.ts \n(\n642\n bytes\n)\n\nCREATE app-exemplo/src/assets/.gitkeep \n(\n0\n bytes\n)\n\nCREATE app-exemplo/src/styles.css \n(\n80\n bytes\n)\n\nCREATE app-exemplo/src/browserslist \n(\n375\n bytes\n)\n\nCREATE app-exemplo/src/karma.conf.js \n(\n964\n bytes\n)\n\nCREATE app-exemplo/src/tsconfig.app.json \n(\n194\n bytes\n)\n\nCREATE app-exemplo/src/tsconfig.spec.json \n(\n282\n bytes\n)\n\nCREATE app-exemplo/src/tslint.json \n(\n314\n bytes\n)\n\nCREATE app-exemplo/src/app/app.module.ts \n(\n314\n bytes\n)\n\nCREATE app-exemplo/src/app/app.component.css \n(\n0\n bytes\n)\n\nCREATE app-exemplo/src/app/app.component.html \n(\n1141\n bytes\n)\n\nCREATE app-exemplo/src/app/app.component.spec.ts \n(\n994\n bytes\n)\n\nCREATE app-exemplo/src/app/app.component.ts \n(\n207\n bytes\n)\n\nCREATE app-exemplo/e2e/protractor.conf.js \n(\n752\n bytes\n)\n\nCREATE app-exemplo/e2e/src/app.e2e-spec.ts \n(\n307\n bytes\n)\n\nCREATE app-exemplo/e2e/src/app.po.ts \n(\n208\n bytes\n)\n\nCREATE app-exemplo/e2e/tsconfig.e2e.json \n(\n213\n bytes\n)\n\n\n\n\n\n\n\nExecutando a aplica\u00e7\u00e3o\n\u00b6\n\n\nPara executar a aplica\u00e7\u00e3o, execute os comandos:\n\n\n1\n2\ncd\n app-exemplo\nng serve --open\n\n\n\n\n\n\nO comando \nng serve\n executa um servidor Web local e \"observa\" os arquivos da sua aplica\u00e7\u00e3o, reconstruindo-a sempre que um arquivo \u00e9 modificado (\nhot-reload\n).\n\n\nA flag \n--open\n vai abrir automaticamente um browser no endere\u00e7o: \nhttp://localhost:4200/\n.\n\n\nVoc\u00ea dever\u00e1 ver algo como:\n\n\n\n\nRefer\u00eancias\n\u00b6\n\n\n\n\nAngular CLI: \nhttps://cli.angular.io/",
            "title": "02 - Primeira Aplica\u00e7\u00e3o Angular"
        },
        {
            "location": "/exercicios/exercicio-02/#exercicio-02",
            "text": "",
            "title": "Exerc\u00edcio 02"
        },
        {
            "location": "/exercicios/exercicio-02/#objetivos",
            "text": "Instalar o Angular CLI  Criar a primeira aplica\u00e7\u00e3o Angular  Executar a aplica\u00e7\u00e3o",
            "title": "Objetivos"
        },
        {
            "location": "/exercicios/exercicio-02/#instalando-o-angular-cli",
            "text": "Para instalar o Angular CLI, execute:  1 npm install -g @angular/cli   Para verificar a instala\u00e7\u00e3o, execute:  1 ng version   O resultado esperado \u00e9:   1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23      _                      _                 ____ _     ___\n    /  \\    _ __   __ _ _   _ |   |  __ _ _ __     / ___ |   |     | _ _ | \n   / \u25b3  \\  |   '_ \\ / _` | | | | |/ _` | ' __ |     |   |     |   |      |   | \n  / ___  \\|   |   |   |   ( _ |   |   | _ |   |   |   ( _ |   |   |        |   | ___ |   | ___  |   | \n /_/    \\_\\_ |   | _ | \\_ _,  | \\_ _,_ | _ | \\_ _,_ | _ |         \\_ ___ | _____ | ___ | \n                 | ___/\n\n\nAngular CLI:  6 .0.8\nNode:  8 .11.3\nOS: linux x64\nAngular:\n...\n\nPackage                      Version\n-\n@angular-devkit/architect     0 .6.8\n@angular-devkit/core          0 .6.8\n@angular-devkit/schematics    0 .6.8\n@schematics/angular           0 .6.8\n@schematics/update            0 .6.8\nrxjs                          6 .2.1\ntypescript                    2 .7.2   Para mais informa\u00e7\u00f5es sobre todos os comandos dispon\u00edveis do Angular CLI, execute:  1 ng  help    Se voc\u00ea quiser saber mais sobre um comando espec\u00edfico, execute  ng [command name] --help . Por exemplo:  1 ng generate --help",
            "title": "Instalando o Angular CLI"
        },
        {
            "location": "/exercicios/exercicio-02/#criando-a-primeira-aplicacao-angular",
            "text": "Para criar a primeira aplica\u00e7\u00e3o Angular, execute:  1 ng new app-exemplo   Esse comando ir\u00e1 criar a aplica\u00e7\u00e3o \"app-exemplo\" numa pasta com mesmo nome, e instalar as depend\u00eancias necess\u00e1rias.  O resultado esperado \u00e9 algo como:   1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30 CREATE app-exemplo/README.md  ( 1027  bytes ) \nCREATE app-exemplo/angular.json  ( 3593  bytes ) \nCREATE app-exemplo/package.json  ( 1315  bytes ) \nCREATE app-exemplo/tsconfig.json  ( 384  bytes ) \nCREATE app-exemplo/tslint.json  ( 2805  bytes ) \nCREATE app-exemplo/.editorconfig  ( 245  bytes ) \nCREATE app-exemplo/.gitignore  ( 503  bytes ) \nCREATE app-exemplo/src/environments/environment.prod.ts  ( 51  bytes ) \nCREATE app-exemplo/src/environments/environment.ts  ( 631  bytes ) \nCREATE app-exemplo/src/favicon.ico  ( 5430  bytes ) \nCREATE app-exemplo/src/index.html  ( 297  bytes ) \nCREATE app-exemplo/src/main.ts  ( 370  bytes ) \nCREATE app-exemplo/src/polyfills.ts  ( 3194  bytes ) \nCREATE app-exemplo/src/test.ts  ( 642  bytes ) \nCREATE app-exemplo/src/assets/.gitkeep  ( 0  bytes ) \nCREATE app-exemplo/src/styles.css  ( 80  bytes ) \nCREATE app-exemplo/src/browserslist  ( 375  bytes ) \nCREATE app-exemplo/src/karma.conf.js  ( 964  bytes ) \nCREATE app-exemplo/src/tsconfig.app.json  ( 194  bytes ) \nCREATE app-exemplo/src/tsconfig.spec.json  ( 282  bytes ) \nCREATE app-exemplo/src/tslint.json  ( 314  bytes ) \nCREATE app-exemplo/src/app/app.module.ts  ( 314  bytes ) \nCREATE app-exemplo/src/app/app.component.css  ( 0  bytes ) \nCREATE app-exemplo/src/app/app.component.html  ( 1141  bytes ) \nCREATE app-exemplo/src/app/app.component.spec.ts  ( 994  bytes ) \nCREATE app-exemplo/src/app/app.component.ts  ( 207  bytes ) \nCREATE app-exemplo/e2e/protractor.conf.js  ( 752  bytes ) \nCREATE app-exemplo/e2e/src/app.e2e-spec.ts  ( 307  bytes ) \nCREATE app-exemplo/e2e/src/app.po.ts  ( 208  bytes ) \nCREATE app-exemplo/e2e/tsconfig.e2e.json  ( 213  bytes )",
            "title": "Criando a primeira aplica\u00e7\u00e3o Angular"
        },
        {
            "location": "/exercicios/exercicio-02/#executando-a-aplicacao",
            "text": "Para executar a aplica\u00e7\u00e3o, execute os comandos:  1\n2 cd  app-exemplo\nng serve --open   O comando  ng serve  executa um servidor Web local e \"observa\" os arquivos da sua aplica\u00e7\u00e3o, reconstruindo-a sempre que um arquivo \u00e9 modificado ( hot-reload ).  A flag  --open  vai abrir automaticamente um browser no endere\u00e7o:  http://localhost:4200/ .  Voc\u00ea dever\u00e1 ver algo como:",
            "title": "Executando a aplica\u00e7\u00e3o"
        },
        {
            "location": "/exercicios/exercicio-02/#referencias",
            "text": "Angular CLI:  https://cli.angular.io/",
            "title": "Refer\u00eancias"
        },
        {
            "location": "/exercicios/exercicio-03/",
            "text": "Exerc\u00edcio 03\n\u00b6\n\n\nObjetivos\n\u00b6\n\n\n\n\nFixar nosso conhecimento dos elementos b\u00e1sicos do angular\n\n\nComponentes\n\n\nDiretivas\n\n\nServicos\n\n\nInje\u00e7\u00e3o de depend\u00eancias\n\n\n\n\nRequisitos\n\u00b6\n\n\nApar\u00eancia:\n\n\n\n\nCriar um componente de nome \nContador\n que:\n\n\n\n\ntenha uma propridade \nnome\n e exiba ela na p\u00e1gina;\n\n\nmostra o valor atual de um contador;\n\n\num bot\u00e3o que incrementa em 1 o valor do contador;\n\n\num \ninput\n que somente aceita n\u00fameros;\n\n\num bot\u00e3o que altera o valor do contador com o \ninput\n acima\n\n\no valor exibido pelo componente deve ser encapsulado num servi\u00e7o a parte com nome \nContadorService\n\n\n\n\nCriar um componente:\n\n\n\n\n\n\ncolocar nele dois \nContadorComponent\n\n\n\n\n\n\nAp\u00f3s terminar altere para que o pr\u00f3prio componente \nContadorComponent\n fa\u00e7a o provider do \nContadorService\n e observe os efeitos dessas altera\u00e7\u00e3o.\n\n\n\n\n\n\nResposta\n\u00b6\n\n\ndeixe a aplica\u00e7\u00e3o executando\n\u00b6\n\n\n1\nnpm start\n\n\n\n\n\n\nabra o terminal e gere os arquivos necess\u00e1rios\n\u00b6\n\n\n 1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n# container para colocar os contadores\nng g component ex3/exercicio3\n\n# criar o componente contador\nng g component ex3/contador\n\n# criar um servico para encapsular o contador\nng g service ex3/contador\n\n# criar uma diretiva para deixar apenas numeros sejam inseridos\nng g directive ex3/sonumeros\n\n\n\n\n\n\nA aplica\u00e7\u00e3o deve ter esses arquivos:\n\n 1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n\u251c\u2500\u2500 app.component.css\n\u251c\u2500\u2500 app.component.html\n\u251c\u2500\u2500 app.component.spec.ts\n\u251c\u2500\u2500 app.component.ts\n\u251c\u2500\u2500 app.module.ts\n\u251c\u2500\u2500 ex3\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 contador\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 contador.component.css\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 contador.component.html\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 contador.component.spec.ts\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 contador.component.ts\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 contador.service.spec.ts\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 contador.service.ts\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 exercicio3\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 exercicio3.component.css\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 exercicio3.component.html\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 exercicio3.component.spec.ts\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 exercicio3.component.ts\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 sonumeros.directive.spec.ts\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 sonumeros.directive.ts\n\u2514\u2500\u2500 introducao\n    \u251c\u2500\u2500 introducao.component.css\n    \u251c\u2500\u2500 introducao.component.html\n    \u2514\u2500\u2500 introducao.component.ts\n\n\n\n\n\nServi\u00e7o que gerencia o contador\n\u00b6\n\n\nBasicamente precisamos definir uma propriedade p\u00fablica para guardar o valor e um m\u00e9todo para increment\u00e1-lo.\n\n\nAltere o arquivo \nsrc/app/ex3/contador.service.ts\n\n\n 1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\nimport\n \n{\n \nInjectable\n \n}\n \nfrom\n \n'@angular/core'\n;\n\n\n\n@\nInjectable\n({\n\n  \nprovidedIn\n:\n \n'root'\n\n\n})\n\n\nexport\n \nclass\n \nContadorService\n \n{\n\n  \nvalor\n \n=\n \n0\n;\n\n  \nincrementar\n()\n \n{\n\n    \nthis\n.\nvalor\n++\n;\n\n  \n}\n\n\n}\n\n\n\n\n\n\n\nMostrar/gerenciar um contador\n\u00b6\n\n\n\n\n\n\nprecisamos de uma propriedade nome:\n\n1\n@\nInput\n()\n \nnome\n:\n \nstring\n;\n\n\n\n\n\n\n\n\n\n\nprecisamos alterar o valor do contador, precisamos de uma propriedade para fazermos um two-way databind na p\u00e1gina\n\n1\nnovoValor\n:\n \nnumber\n;\n\n\n\n\n\n\n\n\n\n\nprecisamos injetar o servico do contador no componente:\n\n1\nconstructor\n(\nprivate\n \ncontador\n:\n \nContadorService\n)\n \n{\n \n}\n\n\n\n\n\n\n\n\n\n\nprecisamos que o template acesse o valor do contador que est\u00e1 no servi\u00e7o. Vamos definir um m\u00e9todo acessor.\n\n1\n2\n3\nget\n \nvalor\n()\n:\n \nnumber\n \n{\n\n  \nreturn\n \nthis\n.\ncontador\n.\nvalor\n;\n\n\n}\n\n\n\n\n\n\n\n\n\n\nprecisamos de m\u00e9todos para incrementar e alterar o valor do contador:\n\n1\n2\n3\n4\n5\n6\n7\n  \nincrementarValor\n()\n \n{\n\n    \nthis\n.\ncontador\n.\nincrementar\n();\n\n  \n}\n\n\n  \nalterarValor\n()\n \n{\n\n    \nthis\n.\ncontador\n.\nvalor\n \n=\n \nthis\n.\nnovoValor\n;\n\n  \n}\n\n\n\n\n\n\n\n\n\n\nresumindo altere o arquivo \nsrc/app/ex3/contador/contador.component.ts\n para:\n\n 1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\nimport\n \n{\n \nContadorService\n \n}\n \nfrom\n \n'./../contador.service'\n;\n\n\nimport\n \n{\n \nComponent\n,\n \nInput\n \n}\n \nfrom\n \n'@angular/core'\n;\n\n\n\n@\nComponent\n({\n\n  \nselector\n:\n \n'app-contador'\n,\n\n  \ntemplateUrl\n:\n \n'./contador.component.html'\n,\n\n  \nstyleUrls\n:\n \n[\n'./contador.component.css'\n],\n\n\n})\n\n\nexport\n \nclass\n \nContadorComponent\n \n{\n\n  \n@\nInput\n()\n \nnome\n:\n \nstring\n;\n\n\n  \nnovoValor\n:\n \nnumber\n;\n\n\n  \nconstructor\n(\nprivate\n \ncontador\n:\n \nContadorService\n)\n \n{\n \n}\n\n\n  \nget\n \nvalor\n()\n:\n \nnumber\n \n{\n\n    \nreturn\n \nthis\n.\ncontador\n.\nvalor\n;\n\n  \n}\n\n\n  \nincrementarValor\n()\n \n{\n\n    \nthis\n.\ncontador\n.\nincrementar\n();\n\n  \n}\n\n\n  \nalterarValor\n()\n \n{\n\n    \nthis\n.\ncontador\n.\nvalor\n \n=\n \nthis\n.\nnovoValor\n;\n\n  \n}\n\n\n}\n\n\n\n\n\n\n\n\n\n\nPara o template do contador devemos:\n\n\n\n\nMostrar o nome do contador. Vamos usar o elemento \nfieldset\n e fazer uma interpola\u00e7\u00e3o no elemento \nlegend\n\n\n\n\n1\n2\n3\n4\n<\nfieldset\n>\n\n  \n<\nlegend\n>\n{{nome}}\n</\nlegend\n>\n\n  \n<!-- ... -->\n\n\n</\nfieldset\n>\n\n\n\n\n\n\n\n\n\n\n\nmostrar o valor atual\n\n1\nValor Atual: {{valor}}\n\n\n\n\n\n\n\n\n\nbot\u00e3o para icrementar o valor. Fa\u00e7amos um bind para o evento \nclick\n chamando o m\u00e9todo que definimos anteriormente no componente.\n```html\nIncrementar\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n- possibilitar que o valor do contador seja alterado. Vamos criar um input text fazendo um two way data binding com a propriedade do componente `novoValor`. Coloque no input a diretiva que ir\u00e1 evitar que sejam digitados caracteres n\u00e3o num\u00e9ricos. Obs. Por enquanto ela n\u00e3o faz isso ainda.\n```html\n\n<input\n \nsize=\n\"5\"\n \nappSonumeros\n \ntype=\n\"text\"\n \n[(ngModel)]=\"novoValor\"\n>\n\n```html\n\n\n- alterar o valor digitado atrav\u00e9s do bind com o evento click de um bot\u00e3o\n```html\n\n<button\n \n(click)=\"alterarValor()\"\n>\nAlterar\n</button>\n\n\n\n\n\n\n\n\n\n\nResumindo, altere o \nsrc/app/ex3/contador/contador.component.html\n\n\n 1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n<\nfieldset\n>\n\n  \n<\nlegend\n>\n{{nome}}\n</\nlegend\n>\n\n  Valor Atual: {{valor}}\n  \n<\nbutton\n \n(\nclick\n)=\"\nincrementarValor\n()\"\n>\nIncrementar\n</\nbutton\n>\n\n\n  \n<\ndiv\n>\n\n    \n<\ninput\n \nsize\n=\n\"5\"\n \nappSonumeros\n \ntype\n=\n\"text\"\n \n[(\nngModel\n)]=\"\nnovoValor\n\"\n>\n\n    \n<\nbutton\n \n(\nclick\n)=\"\nalterarValor\n()\"\n>\nAlterar\n</\nbutton\n>\n\n  \n</\ndiv\n>\n\n\n</\nfieldset\n>\n\n\n\n\n\n\n\n\n\n\nDiretiva para filtrar caracteres somente num\u00e9ricos\n\u00b6\n\n\n\n\npara filtrar os caracteres digitados no campo texto, precisamos interceptar o evento de tecla pressionada. Se n\u00e3o for um caractere de 0 a 9 fazemos o browser dispensar o evento.\n\n1\n2\n3\n4\n5\n6\n  \n@\nHostListener\n(\n'keydown'\n,\n \n[\n'$event'\n])\n\n  \nonKeyDown\n(\ne\n:\n \nKeyboardEvent\n)\n \n{\n\n    \nif\n \n(\n'0123456789'\n.\nindexOf\n(\ne\n.\nkey\n)\n \n===\n \n-\n1\n)\n \n{\n\n      \ne\n.\npreventDefault\n();\n\n    \n}\n\n  \n}",
            "title": "03 - Componentes, Diretivas e Servi\u00e7os"
        },
        {
            "location": "/exercicios/exercicio-03/#exercicio-03",
            "text": "",
            "title": "Exerc\u00edcio 03"
        },
        {
            "location": "/exercicios/exercicio-03/#objetivos",
            "text": "Fixar nosso conhecimento dos elementos b\u00e1sicos do angular  Componentes  Diretivas  Servicos  Inje\u00e7\u00e3o de depend\u00eancias",
            "title": "Objetivos"
        },
        {
            "location": "/exercicios/exercicio-03/#requisitos",
            "text": "Apar\u00eancia:   Criar um componente de nome  Contador  que:   tenha uma propridade  nome  e exiba ela na p\u00e1gina;  mostra o valor atual de um contador;  um bot\u00e3o que incrementa em 1 o valor do contador;  um  input  que somente aceita n\u00fameros;  um bot\u00e3o que altera o valor do contador com o  input  acima  o valor exibido pelo componente deve ser encapsulado num servi\u00e7o a parte com nome  ContadorService   Criar um componente:    colocar nele dois  ContadorComponent    Ap\u00f3s terminar altere para que o pr\u00f3prio componente  ContadorComponent  fa\u00e7a o provider do  ContadorService  e observe os efeitos dessas altera\u00e7\u00e3o.",
            "title": "Requisitos"
        },
        {
            "location": "/exercicios/exercicio-03/#resposta",
            "text": "",
            "title": "Resposta"
        },
        {
            "location": "/exercicios/exercicio-03/#deixe-a-aplicacao-executando",
            "text": "1 npm start",
            "title": "deixe a aplica\u00e7\u00e3o executando"
        },
        {
            "location": "/exercicios/exercicio-03/#abra-o-terminal-e-gere-os-arquivos-necessarios",
            "text": "1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11 # container para colocar os contadores\nng g component ex3/exercicio3\n\n# criar o componente contador\nng g component ex3/contador\n\n# criar um servico para encapsular o contador\nng g service ex3/contador\n\n# criar uma diretiva para deixar apenas numeros sejam inseridos\nng g directive ex3/sonumeros   A aplica\u00e7\u00e3o deve ter esses arquivos:  1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24 \u251c\u2500\u2500 app.component.css\n\u251c\u2500\u2500 app.component.html\n\u251c\u2500\u2500 app.component.spec.ts\n\u251c\u2500\u2500 app.component.ts\n\u251c\u2500\u2500 app.module.ts\n\u251c\u2500\u2500 ex3\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 contador\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 contador.component.css\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 contador.component.html\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 contador.component.spec.ts\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 contador.component.ts\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 contador.service.spec.ts\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 contador.service.ts\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 exercicio3\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 exercicio3.component.css\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 exercicio3.component.html\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 exercicio3.component.spec.ts\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 exercicio3.component.ts\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 sonumeros.directive.spec.ts\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 sonumeros.directive.ts\n\u2514\u2500\u2500 introducao\n    \u251c\u2500\u2500 introducao.component.css\n    \u251c\u2500\u2500 introducao.component.html\n    \u2514\u2500\u2500 introducao.component.ts",
            "title": "abra o terminal e gere os arquivos necess\u00e1rios"
        },
        {
            "location": "/exercicios/exercicio-03/#servico-que-gerencia-o-contador",
            "text": "Basicamente precisamos definir uma propriedade p\u00fablica para guardar o valor e um m\u00e9todo para increment\u00e1-lo.  Altere o arquivo  src/app/ex3/contador.service.ts   1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11 import   {   Injectable   }   from   '@angular/core' ;  @ Injectable ({ \n   providedIn :   'root'  })  export   class   ContadorService   { \n   valor   =   0 ; \n   incrementar ()   { \n     this . valor ++ ; \n   }  }",
            "title": "Servi\u00e7o que gerencia o contador"
        },
        {
            "location": "/exercicios/exercicio-03/#mostrargerenciar-um-contador",
            "text": "precisamos de uma propriedade nome: 1 @ Input ()   nome :   string ;      precisamos alterar o valor do contador, precisamos de uma propriedade para fazermos um two-way databind na p\u00e1gina 1 novoValor :   number ;      precisamos injetar o servico do contador no componente: 1 constructor ( private   contador :   ContadorService )   {   }      precisamos que o template acesse o valor do contador que est\u00e1 no servi\u00e7o. Vamos definir um m\u00e9todo acessor. 1\n2\n3 get   valor () :   number   { \n   return   this . contador . valor ;  }      precisamos de m\u00e9todos para incrementar e alterar o valor do contador: 1\n2\n3\n4\n5\n6\n7    incrementarValor ()   { \n     this . contador . incrementar (); \n   } \n\n   alterarValor ()   { \n     this . contador . valor   =   this . novoValor ; \n   }      resumindo altere o arquivo  src/app/ex3/contador/contador.component.ts  para:  1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27 import   {   ContadorService   }   from   './../contador.service' ;  import   {   Component ,   Input   }   from   '@angular/core' ;  @ Component ({ \n   selector :   'app-contador' , \n   templateUrl :   './contador.component.html' , \n   styleUrls :   [ './contador.component.css' ],  })  export   class   ContadorComponent   { \n   @ Input ()   nome :   string ; \n\n   novoValor :   number ; \n\n   constructor ( private   contador :   ContadorService )   {   } \n\n   get   valor () :   number   { \n     return   this . contador . valor ; \n   } \n\n   incrementarValor ()   { \n     this . contador . incrementar (); \n   } \n\n   alterarValor ()   { \n     this . contador . valor   =   this . novoValor ; \n   }  }      Para o template do contador devemos:   Mostrar o nome do contador. Vamos usar o elemento  fieldset  e fazer uma interpola\u00e7\u00e3o no elemento  legend   1\n2\n3\n4 < fieldset > \n   < legend > {{nome}} </ legend > \n   <!-- ... -->  </ fieldset >      mostrar o valor atual 1 Valor Atual: {{valor}}     bot\u00e3o para icrementar o valor. Fa\u00e7amos um bind para o evento  click  chamando o m\u00e9todo que definimos anteriormente no componente.\n```html Incrementar  1\n2\n3\n4\n5\n6\n7\n8\n9 - possibilitar que o valor do contador seja alterado. Vamos criar um input text fazendo um two way data binding com a propriedade do componente `novoValor`. Coloque no input a diretiva que ir\u00e1 evitar que sejam digitados caracteres n\u00e3o num\u00e9ricos. Obs. Por enquanto ela n\u00e3o faz isso ainda.\n```html <input   size= \"5\"   appSonumeros   type= \"text\"   [(ngModel)]=\"novoValor\" > \n```html\n\n\n- alterar o valor digitado atrav\u00e9s do bind com o evento click de um bot\u00e3o\n```html <button   (click)=\"alterarValor()\" > Alterar </button>      Resumindo, altere o  src/app/ex3/contador/contador.component.html   1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10 < fieldset > \n   < legend > {{nome}} </ legend > \n  Valor Atual: {{valor}}\n   < button   ( click )=\" incrementarValor ()\" > Incrementar </ button > \n\n   < div > \n     < input   size = \"5\"   appSonumeros   type = \"text\"   [( ngModel )]=\" novoValor \" > \n     < button   ( click )=\" alterarValor ()\" > Alterar </ button > \n   </ div >  </ fieldset >",
            "title": "Mostrar/gerenciar um contador"
        },
        {
            "location": "/exercicios/exercicio-03/#diretiva-para-filtrar-caracteres-somente-numericos",
            "text": "para filtrar os caracteres digitados no campo texto, precisamos interceptar o evento de tecla pressionada. Se n\u00e3o for um caractere de 0 a 9 fazemos o browser dispensar o evento. 1\n2\n3\n4\n5\n6    @ HostListener ( 'keydown' ,   [ '$event' ]) \n   onKeyDown ( e :   KeyboardEvent )   { \n     if   ( '0123456789' . indexOf ( e . key )   ===   - 1 )   { \n       e . preventDefault (); \n     } \n   }",
            "title": "Diretiva para filtrar caracteres somente num\u00e9ricos"
        }
    ]
}